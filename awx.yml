---
- name: Configure a AWX Server 7.0.0
  hosts: awxserver
  become: True
  vars:

  tasks:
    
#    - name: upgrade all packages
#      yum: name=* state=latest
        
    - name: install python tools
      yum: name=policycoreutils-python update_cache=yes
    
    - name: Open ports 8050-8052 to allow a webserver to listen
      seport:
        ports: 8050-8052
        proto: tcp
        setype: http_port_t
        state: present

    - name: Set httpd_can_network_connect flag on and keep it persistent across reboots
      seboolean:
        name: httpd_can_network_connect
        state: yes
        persistent: yes
         
    - name: Install epel-release package
      yum: name=epel-release
      
    - name: Install centos utilities & wget
      yum:
        name: "{{ packages }}"
      vars:
        packages:
        - centos-release-scl
        - centos-release-scl-rh
        - wget

    - name: Add AWX repository
      yum_repository:
        name: copr:copr.fedorainfracloud.org:mrmeee:ansible-awx
        file: ansible-awx
        description: Copr repo for ansible-awx owned by mrmeee
        baseurl: https://copr-be.cloud.fedoraproject.org/results/mrmeee/ansible-awx/epel-7-$basearch/
#        type: rpm-md
        skip_if_unavailable: yes
        gpgcheck: yes
        gpgkey: https://copr-be.cloud.fedoraproject.org/results/mrmeee/ansible-awx/pubkey.gpg
        repo_gpgcheck: no
        
    - name: Add RABBITMQ repository
      yum_repository:
        name: bintray-rabbitmq-rpm
        file: rabbitmq
        description: bintray-rabbitmq-rpm
        baseurl: https://dl.bintray.com/rabbitmq/rpm/rabbitmq-server/v3.7.x/el/7/
        gpgcheck: no
        repo_gpgcheck: no
        enabled: yes

    - name: Add RABBITMQ ERLANG repository
      yum_repository:
        name: bintray-rabbitmq-erlang-rpm
        file: rabbitmq-erlang
        description: bintray-rabbitmq-rpm
        baseurl: https://dl.bintray.com/rabbitmq-erlang/rpm/erlang/21/el/7/
        gpgcheck: no
        repo_gpgcheck: no
        enabled: yes
 
    - name: Install RabbitMQ
      yum: name=rabbitmq-server

    - name: Install GIT
      yum: name=rh-git29

    - name: Install PostgreSQL
      yum: name=rh-postgresql10
      
    - name: Install Memcached
      yum: name=memcached
      
    - name: Install NGINX
      yum: name=nginx
      
    - name: Install PYTHON36
      yum: name=rh-python36

    - name: Install PYTHON36-SPECIAL
      yum:
        name: 'rh-python36*'
        disablerepo: '*'
        enablerepo: "copr:copr.fedorainfracloud.org:mrmeee:ansible-awx,base"
        exclude: '*-debuginfo'
        
    - name: Install AWX
      yum: name=ansible-awx
      
    - name: Remove old data files
      file:
        path: /var/opt/rh/rh-postgresql10/lib/pgsql/data/*
        state: absent
        
    - name: Remove old files
      file:
        path: /var/lib/pgsql
        state: absent        
       
    - name: create tempdir
      file:
        path: /var/lib/awx/.ansible/tmp
        owner: awx
        mode: 0700
        state: directory
      
    - name: Initialise PostgreSQL Database
      shell: |
        scl enable rh-postgresql10 "postgresql-setup --initdb --unit rh-postgresql10-postgresql"
      become_user: awx
      
    - name: Start PostgreSQL Database
      systemd:
        state: started
        name: rh-postgresql10-postgresql.service
      
    - name: Start RabbitMQ Service
      systemd:
        state: started
        name: rabbitmq-server
      
    - name: Initialise PostgreSQL User
      shell: |
        scl enable rh-postgresql10 "su postgres -c \"createuser -S awx\""
      become_user: root
      
    - name: Initialise PostgreSQL Database Schema
      shell: |
        scl enable rh-postgresql10 "su postgres -c \"createdb -O awx awx\""
      become_user: root
      
    - name: Initialise AWX Data Schema
      shell: |
        scl enable rh-python36 rh-postgresql10 rh-git29 "GIT_PYTHON_REFRESH=quiet awx-manage migrate"
      become_user: awx
      
    - name: Fill AWX Database with Initial Data - Part I/II
      shell: |
        echo "from django.contrib.auth.models import User; User.objects.create_superuser('admin', 'root@localhost', 'password')" | sudo -u awx scl enable rh-python36 rh-postgresql10 "GIT_PYTHON_REFRESH=quiet awx-manage shell"
      become_user: root
      
    - name: Fill AWX Database with Initial Data - Part II/II
      shell: |
        scl enable rh-python36 rh-postgresql10 rh-git29 "GIT_PYTHON_REFRESH=quiet awx-manage create_preload_data" # Optional Sample Configuration
        scl enable rh-python36 rh-postgresql10 rh-git29 "GIT_PYTHON_REFRESH=quiet awx-manage provision_instance --hostname=$(hostname)"
        scl enable rh-python36 rh-postgresql10 rh-git29 "GIT_PYTHON_REFRESH=quiet awx-manage register_queue --queuename=tower --hostnames=$(hostname)"
      become_user: awx

    - name: Configure NGINX as proxy
      shell: |
        sudo wget -O /etc/nginx/nginx.conf https://raw.githubusercontent.com/MrMEEE/awx-build/master/nginx.conf
      become_user: root
     
    - name: Start & Enable AWX Service
      systemd:
        state: started
        enabled: yes
        name: awx
     
            
